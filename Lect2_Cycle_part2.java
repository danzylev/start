package com.company;
import java.util.Scanner;

public class Lect2_Cycle_part2 {

    public static void main(String[] args) {
        System.out.println("Занятие №2. Циклы. Часть вторая c 8й задачи");
        //Первый модуль. Выдает на экран "HelloWorld!!!"

        Lect2_Cycle_part2.task8();
        Lect2_Cycle_part2.task9();
        Lect2_Cycle_part2.task10();
        Lect2_Cycle_part2.task11();
        Lect2_Cycle_part2.task12();
        Lect2_Cycle_part2.task13();
    }
    public static void task8(){
        /*
        8) Выведите на экран первые 11 членов последовательности Фибоначчи. Напоминаем, что первый и второй члены
        последовательности равны единицам, а каждый следующий — сумме двух предыдущих.         */
        System.out.println("Задача по циклам №8");
        int f[]= new int[11];
          f[0] = 1; //задаем первые 2 числа массива
          f[1] = 1;
          System.out.print("Первые 11 чисел Фибоначчи: " + f[0] + " " + f[1]);
          for (int i = 2; i < f.length; i++){
              f[i] = f[i-2] + f[i-1]; //считаем каждый последующий элемент массива и выводим на экран
              System.out.print(" " + f[i]);
              }
        System.out.println();
    }
    public static void task9(){
        /*
        9) Для введённого пользователем с клавиатуры натурального числа посчитайте сумму всех его цифр
        (заранее не известно сколько цифр будет в числе).
         */
        System.out.println("Циклы 9");
        Scanner in = new Scanner(System.in);
        System.out.print("Введите натуральное число: ");
        int a = in.nextInt(); //получили и записали введенное натуральное число
        int sum = 0;          //здесь будем считать сумму цифр
        int c = a;            //а это число будем портить, чтобы посмотреть, не закончились ли знаки и от него считать остаток
        int i;                //это число будет искомыми знаками с конца
        do {
            i = c % 10;
            sum = sum + i;
            c = c / 10;
        } while (c > 0);
        System.out.println("Сумма цифр числа " + a + " составляет " + sum);
    }
    public static void task10(){

        /*
        10) В городе N проезд в трамвае осуществляется по бумажным отрывным билетам. Каждую неделю трамвайное депо
        заказывает в местной типографии рулон билетов с номерами от 000001 до 999999. «Счастливым» считается билетик
        у которого сумма первых трёх цифр номера равна сумме последних трёх цифр, как, например, в билетах с
        номерами 003102 или 567576. Трамвайное депо решило подарить сувенир обладателю каждого счастливого билета и
        теперь раздумывает, как много сувениров потребуется.
        С помощью программы подсчитайте сколько счастливых билетов в одном рулоне?
         */
        System.out.println("Циклы 10");
        int n = 1; //это будет номер билета, да 1, 2, 3, без 0 впереди. но это не важно
        int k = 0; //это будет счетчик счастливых билетов
        int n1, n2, n3, n4, n5, n6; //цифры в номере билета, слева направо
        int sum1, sum2;             //сумма цифр слева и справка

        for (n = 1; n <= 999999; n++){
            n1 = n / 100000; //если например число 000001, то n1 = 0
            n2 = (n / 10000) % 10;
            n3 = (n/1000) % 10;
            n4 = (n/100) % 10;
            n5 = (n/10) % 10;
            n6 = n % 10;
            sum1 = n1 + n2 + n3;
            sum2 = n4 + n5 + n6;
            if (sum1 == sum2) k++;
        }
        System.out.println("Количество счастливых билетиков составляет: " + k);
        System.out.println("А значит счастливых билетов " + (k*100/n) + "%");
    }
    public static void task11(){
        /*
        11) В городе N есть большой склад на котором существует 50000 различных полок. Для удобства работников
        руководство склада решило заказать для каждой полки табличку с номером от 00001 до 50000 в местной типографии,
        но когда таблички напечатали, оказалось что печатный станок из-за неисправности не печатал цифру 2, поэтому все
        таблички, в номерах которых содержалась одна или более двойка (например, 00002 или 20202) — надо перепечатывать.
        Напишите программу, которая подсчитает сколько всего таких ошибочных табличек оказалось в бракованной партии.
         */
        System.out.println("Циклы 11");
        int n1,n2,n3,n4,n5;
        int k = 0;
        for (int i = 1; i <= 50000; i++) {
            n1 = i / 10000;
            n2 = i / 1000 % 10;
            n3 = i / 100 % 10;
            n4 = i / 10 % 10;
            n5 = i % 10;
            if ((n1 == 2) | (n2 == 2) | (n3 == 2) | (n4 == 2) | (n5 == 2)) k = k + 1; // надеюсь, что правильно применил логическое или
        }
        System.out.println("Количество табличек с цифрой 2 - " + k + " шт.");
    }
    public static void task12(){
        /*
        12) Электронные часы показывают время в формате от 00:00 до 23:59. Подсчитать сколько раз за сутки случается
        так, что слева от двоеточия показывается симметричная комбинация для той, что справа от двоеточия
        (например, 02:20, 11:11 или 15:51).
         */
        System.out.println("Циклы 12");
        int h, m; // часы и минуты
        int res = 0;  // счетчик раз
        for (h = 0; h < 24; h++)
            for (m = 0; m < 60; m++ )
            {
                int h1 = h / 10;
                int h2 = h % 10;
                int m1 = m / 10;
                int m2 = m % 10;
                if ((h1 == m2) && (h2 == m1)) res = res + 1;
            }
        System.out.println("Симметричное время бывает " + res + " раз в сутки.");
    }
    public static void task13(){
        /*
        13) В американской армии считается несчастливым число 13, а в японской — 4. Перед международными учениями штаб
        российской армии решил исключить номера боевой техники, содержащие числа 4 или 13 (например, 40123, 13313, 12345 или 13040),
        чтобы не смущать иностранных коллег. Если в распоряжении армии имеется 100 тыс. единиц боевой техники и каждая боевая
        машина имеет номер от 00001 до 99999, то сколько всего номеров придётся исключить?
         */
        System.out.println("Циклы 13");
        int res = 0; //счетчик таких номеров
        int s1, s2, s3, s4, s5; //цифры номера
        for (int i = 1; i <= 99999; i++) {
            s1 = i / 10000;
            s2 = (i / 1000) % 10;
            s3 = (i / 100) % 10;
            s4 = (i / 10) % 10;
            s5 = i % 10;
            if ((s1 == 2) | (s2 == 2) | (s3 == 2) | (s4 == 2) | (s5 == 2)) res = res + 1;
            else if ((s1 * 10 + s2 == 13) | (s2 * 10 + s3 == 13) | (s3 * 10 + s4 == 13) | (s4 * 10 + s5 == 13))
                res = res + 1;
        }
        System.out.println("13 и 2 встречаются в номерах техники " + res + " раз.");
        }
}
